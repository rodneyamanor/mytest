//
// Generated file, do not edit! Created by nedtool 5.4 from BLEADVERT.msg.
//

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#ifndef __BLEADVERT_M_H
#define __BLEADVERT_M_H

#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0504
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif



/**
 * Class generated from <tt>BLEADVERT.msg:19</tt> by nedtool.
 * <pre>
 * packet AdvertisementMsg
 * 
 * {
 *     string sourceAddress;
 *     string destinationAddress = "FF:FF:FF:FF:FF:FF";
 *     simtime_t beacon;
 * }
 * </pre>
 */
class AdvertisementMsg : public ::omnetpp::cPacket
{
  protected:
    ::omnetpp::opp_string sourceAddress;
    ::omnetpp::opp_string destinationAddress;
    ::omnetpp::simtime_t beacon;

  private:
    void copy(const AdvertisementMsg& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const AdvertisementMsg&);

  public:
    AdvertisementMsg(const char *name=nullptr, short kind=0);
    AdvertisementMsg(const AdvertisementMsg& other);
    virtual ~AdvertisementMsg();
    AdvertisementMsg& operator=(const AdvertisementMsg& other);
    virtual AdvertisementMsg *dup() const override {return new AdvertisementMsg(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    // field getter/setter methods
    virtual const char * getSourceAddress() const;
    virtual void setSourceAddress(const char * sourceAddress);
    virtual const char * getDestinationAddress() const;
    virtual void setDestinationAddress(const char * destinationAddress);
    virtual ::omnetpp::simtime_t getBeacon() const;
    virtual void setBeacon(::omnetpp::simtime_t beacon);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const AdvertisementMsg& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, AdvertisementMsg& obj) {obj.parsimUnpack(b);}


#endif // ifndef __BLEADVERT_M_H

